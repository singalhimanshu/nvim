{
    "suggest.completionItemKindLabels": {
        "text": "t",
        "method": "m",
        "function": ""
    },
    "snippets.priority": 1,
    "suggest.languageSourcePriority": 99,
    "languageserver": {
        "go": {
            "command": "gopls",
            "rootPatterns": [
                "go.mod"
            ],
            "trace.server": "verbose",
            "filetypes": [
                "go"
            ]
        },
        "ccls": {
            "command": "ccls",
            "filetypes": [
                "c",
                "cpp",
                "objc",
                "objcpp"
            ],
            "rootPatterns": [
                ".ccls",
                "compile_commands.json",
                ".vim/",
                ".git/",
                ".hg/"
            ],
            "initializationOptions": {
                "cache": {
                    "directory": "/tmp/ccls"
                },
                "highlight": {
                    "lsRanges": true
                }
            }
        }
    },
    "coc.source.file.priority": 2,
    "coc.source.around.priority": 3,
    "coc.source.buffer.priority": 4,
    // diagnostics
    "diagnostic.errorSign": " ",
    "diagnostic.warningSign": " ",
    "diagnostic.infoSign": "",
    "diagnostic.hintSign": " ",
    // "diagnostic.displayByAle": true,
    "diagnostic.virtualText": true, // this won't work with codelens when error on same line
    // list
    "list.indicator": ">",
    "list.selectedSignText": " ",
    // autoformat
    "coc.preferences.formatOnSaveFiletypes": [
        "css",
        "markdown",
        "javascript",
        "graphql",
        "html",
        "yaml",
        "json",
        "python",
        // "cpp",
        "go",
        "java"
    ],
    "coc.preferences.hoverTarget": "float",
    // python config
    "python.analysis.autoImportCompletions": true,
    "python.analysis.autoSearchPaths": true,
    "python.analysis.diagnosticMode": "openFilesOnly",
    "python.analysis.stubPath": "typings",
    "python.analysis.typeshedPaths": [],
    "python.analysis.diagnosticSeverityOverrides": {},
    "python.analysis.typeCheckingMode": "basic",
    "python.analysis.useLibraryCodeForTypes": true,
    "python.pythonPath": "python",
    "python.venvPath": "",
    "python.formatting.provider": "black",
    "python.formatting.blackPath": "black",
    "python.formatting.blackArgs": [],
    "python.formatting.autopep8Path": "autopep8",
    "python.formatting.autopep8Args": [],
    "python.formatting.yapfPath": "yapf",
    "python.formatting.yapfArgs": [],
    "python.linting.enabled": true,
    "python.linting.flake8Enabled": false,
    "python.linting.banditEnabled": false,
    "python.linting.mypyEnabled": false,
    "python.linting.pytypeEnabled": false,
    "python.linting.prospectorEnabled": false,
    "python.linting.pydocstyleEnabled": false,
    "python.linting.pylamaEnabled": false,
    "python.linting.pylintEnabled": false,
    "pyright.disableCompletion": false,
    "pyright.disableLanguageServices": false,
    "pyright.disableOrganizeImports": false,
    // snippets
    "snippets.ultisnips.directories": [
        "UltiSnips",
        "~/.config/nvim/snips"
    ],
    // emmet
    "emmet.includeLanguages": {
        "vue-html": "html",
        "javascript": "javascriptreact"
    },
    // CSS (disable since I'm also using stylelintplus)
    "css.validate": false,
    "less.validate": false,
    "scss.validate": false,
    "wxss.validate": false,
    // explorer
    "explorer.width": 30,
    "explorer.file.root.template": "[icon] [git] [hidden & 1][root]",
    "explorer.icon.enableNerdfont": true,
    "explorer.previewAction.onHover": false,
    "explorer.icon.enableVimDevicons": false,
    "explorer.file.showHiddenFiles": false,
    "explorer.keyMappings.global": {
        "<cr>": [
            "expandable?",
            "expand",
            "open"
        ],
        "v": "open:vsplit"
    },
    "bookmark.sign": "",
    //coc-emoji
    "coc.source.emoji.filetypes": [
        "markdown"
    ],
    "git.enableGutters": true,
    "diagnostic-languageserver.linters": {
        "cpplint": {
            "command": "cpplint",
            "args": [
                "%file"
            ],
            "debounce": 100,
            "isStderr": true,
            "isStdout": false,
            "sourceName": "cpplint",
            "offsetLine": 0,
            "offsetColumn": 0,
            "formatPattern": [
                "^[^:]+:(\\d+):(\\d+)?\\s+([^:]+?)\\s\\[(\\d)\\]$",
                {
                    "line": 1,
                    "column": 2,
                    "message": 3,
                    "security": 4
                }
            ],
            "securities": {
                "1": "info",
                "2": "warning",
                "3": "warning",
                "4": "error",
                "5": "error"
            }
        },
        "pylint": {
            "sourceName": "pylint",
            "command": "pylint",
            "args": [
                "--output-format",
                "text",
                "--score",
                "no",
                "--msg-template",
                "'{line}:{column}:{category}:{msg} ({msg_id}:{symbol})'",
                "%file"
            ],
            "formatPattern": [
                "^(\\d+?):(\\d+?):([a-z]+?):(.*)$",
                {
                    "line": 1,
                    "column": 2,
                    "security": 3,
                    "message": 4
                }
            ],
            "rootPatterns": [
                ".git",
                "pyproject.toml",
                "setup.py"
            ],
            "securities": {
                "informational": "hint",
                "refactor": "info",
                "convention": "info",
                "warning": "warning",
                "error": "error",
                "fatal": "error"
            },
            "offsetColumn": 1,
            "formatLines": 1
        },
        "golangci-lint": {
            "command": "golangci-lint",
            "rootPatterns": [
                ".git",
                "go.mod"
            ],
            "debounce": 100,
            "args": [
                "run",
                "--out-format",
                "json"
            ],
            "sourceName": "golangci-lint",
            "parseJson": {
                "sourceName": "Pos.Filename",
                "sourceNameFilter": true,
                "errorsRoot": "Issues",
                "line": "Pos.Line",
                "column": "Pos.Column",
                "message": "${Text} [${FromLinter}]"
            }
        },
        "markdownlint": {
            "command": "markdownlint",
            "isStderr": true,
            "debounce": 100,
            "args": [
                "--stdin"
            ],
            "offsetLine": 0,
            "offsetColumn": 0,
            "sourceName": "markdownlint",
            "formatLines": 1,
            "formatPattern": [
                "^.*?:\\s+(\\d+):\\s+(.*)(\\r|\\n)*$",
                {
                    "line": 1,
                    "column": -1,
                    "message": 2
                }
            ]
        }
    },
    "diagnostic-languageserver.filetypes": {
        "cpp": "cpplint",
        "go": "golangci-lint",
        "python": "pylint",
        "markdown": "markdownlint"
    }
}
